"0",""
"0","###################CHUNK5"
"0",""
"0",""
"0",""
"0","#make activity data non-cumulative"
"0","chunk5 <- chunk5 %>% "
"0","  add_column(MOD_ADX = chunk5_act$MOD_ADX) %>%"
"0","  mutate(Activity = MOD_ADX - lag(MOD_ADX, default = 0))"
"0",""
"0","#dates <- unique(chunk5$date)"
"0","#chunk5$day <- match(chunk5$date, dates)"
"0",""
"0","#subset out baseline data"
"0","baseline <- c(7)"
"0","baseline_cage <- chunk5 %>% "
"0","  filter(Animal %in% baseline)"
"0","baseline_cage <- baseline_cage %>%  mutate(DateTime = round_date(ymd_hms(as.POSIXct(baseline_cage$DateTime)), unit=""min""))"
"0",""
"0","#subset out animal data"
"0","target <- c(0,1,2,3,4,5,6)"
"0","cages <- chunk5 %>% "
"0","  filter(Animal %in% target)"
"0",""
"0","cages <- cages %>% "
"0","  mutate(DateTime = round_date(ymd_hms(as.POSIXct(cages$DateTime)), unit=""min"")) %>%"
"0","  select(Animal_ID, sex, DateTime, date, time, weight, Activity, EE, H2Omg, "
"0","         H2Oml, Deg_C, CO2, VO2, VCO2, RQ, SD_VO2, SD_VCO2, SD_H2Oml, "
"0","         SD_H2Omg, SS4_FR, H2O_WVP, BP)"
"0",""
"0","chunk5 <- cages"
"0",""
"0",""
"0","###################CHUNK1"
"0",""
"0",""
"0","chunk1 <- chunk1 %>% "
"0","  add_column(MOD_ADX = chunk1_act$MOD_ADX) %>%"
"0","  mutate(Activity = MOD_ADX - lag(MOD_ADX, default = 0))"
"0",""
"0","#dates <- unique(chunk5$date)"
"0","#chunk5$day <- match(chunk5$date, dates)"
"0",""
"0","#subset out baseline data"
"0","baseline <- c(7)"
"0","baseline_cage <- chunk1 %>% "
"0","  filter(Animal %in% baseline)"
"0","baseline_cage <- baseline_cage %>%  mutate(DateTime = round_date(ymd_hms(as.POSIXct(baseline_cage$DateTime)), unit=""min""))"
"0",""
"0","#subset out animal data"
"0","target <- c(0,1,2,3,4,5,6)"
"0","cages <- chunk1 %>% "
"0","  filter(Animal %in% target)"
"0",""
"0","cages <- cages %>% "
"0","  mutate(DateTime = round_date(ymd_hms(as.POSIXct(cages$DateTime)), unit=""min"")) %>%"
"0","  select(Animal_ID, sex, DateTime, date, time, weight, Activity, EE, H2Omg, "
"0","         H2Oml, Deg_C, CO2, VO2, VCO2, RQ, SD_VO2, SD_VCO2, SD_H2Oml, "
"0","         SD_H2Omg, SS4_FR, H2O_WVP, BP)"
"0",""
"0","chunk1 <- cages"
"0",""
"0","###################ldr1"
"0",""
"0","ldr1 <- ldr1 %>% "
"0","  add_column(MOD_ADX = ldr1_act$MOD_ADX) %>%"
"0","  mutate(Activity = MOD_ADX - lag(MOD_ADX, default = 0))"
"0",""
"0","#dates <- unique(chunk5$date)"
"0","#chunk5$day <- match(chunk5$date, dates)"
"0",""
"0","#subset out baseline data"
"0","baseline <- c(7)"
"0","baseline_cage <- ldr1 %>% "
"0","  filter(Animal %in% baseline)"
"0","baseline_cage <- baseline_cage %>%  mutate(DateTime = round_date(ymd_hms(as.POSIXct(baseline_cage$DateTime)), unit=""min""))"
"0",""
"0","#subset out animal data"
"0","target <- c(0,1,2,3,4,5,6)"
"0","cages <- ldr1 %>% "
"0","  filter(Animal %in% target)"
"0",""
"0","cages <- cages %>% "
"0","  mutate(DateTime = round_date(ymd_hms(as.POSIXct(cages$DateTime)), unit=""min"")) %>%"
"0","  select(Animal_ID, sex, DateTime, date, time, weight, Activity, EE, H2Omg, "
"0","         H2Oml, Deg_C, CO2, VO2, VCO2, RQ, SD_VO2, SD_VCO2, SD_H2Oml, "
"0","         SD_H2Omg, SS4_FR, H2O_WVP, BP)"
"0",""
"0","ldr1 <- cages"
"0",""
"0","cages <- rbind(ldr1, chunk5)"
"0",""
"0",""
"0","#here is the outlier removal part"
"0",""
"0",""
"0",""
"0",""
"0","count = 1"
"0","dependent_variables = c(""EE"", ""RQ"", ""VO2"", ""VCO2"", ""H2Omg"", ""Activity"")"
"0","varname_list = c(""EE_OLs"",""RQ_OLs"",""VO2_OLs"",""VCO2_OLs"",""H2O_OLs"", ""Activity_OLs"")"
"0",""
"0","for (DV in dependent_variables){"
"0","  print(DV)"
"0","    model <- lm(as.formula(paste0(DV, "" ~ Animal_ID"")), data = cages)"
"0","  model.metrics <- augment(model) %>% select(-.hat, -.sigma, -.fitted)"
"0","  summ <- model.metrics %>% filter(abs(.std.resid) > 2) %>% as.data.frame()"
"0",""
"0","    OL_list = c()"
"0","  masterlist = c()"
"0","  for (each_outlier_row in 1:nrow(summ)){"
"0","    this_weight <- summ[each_outlier_row, ""Animal_ID""]"
"0","    this_DV  <- summ[each_outlier_row, DV]"
"0","    OL_list <- c(OL_list, (which(cages$Animal_ID == this_weight & cages[DV] == this_DV)))"
"0",""
"0","  }"
"0","  print(OL_list)"
"0","  #Assign list of outliers to specified variable lists (OL_list_EE, RQ, VO2, VCO2, mgH2O)"
"0","  assign(paste(""OL_list_"", DV, sep = """"), OL_list)  "
"0","}"
"1","[1]"
"1"," ""EE"""
"1","
"
"1","  [1]"
"1","  460"
"1","  471"
"1","  474"
"1","  932"
"1","  933"
"1","  935"
"1","  936"
"1","  937"
"1","  938"
"1","  942"
"1","  943"
"1","  944"
"1","  945"
"1","  946"
"1","  947"
"1","  948"
"1","  949"
"1","  950"
"1","  951"
"1","  952"
"1","  998"
"1"," 1449"
"1"," 1454"
"1"," 1485"
"1","
"
"1"," [25]"
"1"," 1490"
"1"," 1491"
"1"," 1527"
"1"," 1530"
"1"," 1569"
"1"," 1598"
"1"," 1599"
"1"," 1604"
"1"," 1605"
"1"," 1606"
"1"," 1609"
"1"," 1659"
"1"," 1660"
"1"," 1713"
"1"," 1714"
"1"," 1768"
"1"," 2163"
"1"," 2164"
"1"," 2165"
"1"," 2166"
"1"," 2168"
"1"," 2171"
"1"," 2172"
"1"," 2173"
"1","
"
"1"," [49]"
"1"," 2174"
"1"," 2175"
"1"," 2176"
"1"," 2177"
"1"," 2178"
"1"," 2179"
"1"," 2180"
"1"," 2181"
"1"," 2182"
"1"," 2183"
"1"," 2194"
"1"," 2210"
"1"," 2211"
"1"," 2212"
"1"," 2213"
"1"," 2214"
"1"," 2215"
"1"," 2216"
"1"," 2217"
"1"," 2219"
"1"," 2220"
"1"," 2223"
"1"," 2225"
"1"," 2226"
"1","
"
"1"," [73]"
"1"," 2227"
"1"," 2228"
"1"," 2229"
"1"," 2230"
"1"," 2231"
"1"," 2257"
"1"," 2258"
"1"," 2259"
"1"," 2260"
"1"," 2261"
"1"," 2262"
"1"," 2263"
"1"," 2264"
"1"," 2266"
"1"," 2267"
"1"," 2268"
"1"," 2269"
"1"," 2270"
"1"," 2272"
"1"," 2273"
"1"," 2274"
"1"," 2275"
"1"," 2277"
"1"," 2304"
"1","
"
"1"," [97]"
"1"," 2305"
"1"," 2306"
"1"," 2307"
"1"," 2308"
"1"," 2309"
"1"," 2310"
"1"," 2311"
"1"," 2312"
"1"," 2314"
"1"," 2315"
"1"," 2316"
"1"," 2317"
"1"," 2319"
"1"," 2320"
"1"," 2321"
"1"," 2322"
"1"," 2323"
"1"," 2324"
"1"," 2325"
"1"," 2326"
"1"," 2328"
"1","
"
"1","[1]"
"1"," ""RQ"""
"1","
"
"1"," [1]"
"1","  408"
"1","  409"
"1","  411"
"1","  412"
"1","  413"
"1","  414"
"1","  415"
"1","  417"
"1","  418"
"1","  420"
"1","  424"
"1","  425"
"1","  497"
"1","  540"
"1","  541"
"1","  543"
"1","  546"
"1","  548"
"1","  549"
"1","  553"
"1"," 1730"
"1","
"
"1","[1]"
"1"," ""VO2"""
"1","
"
"1","  [1]"
"1","  460"
"1","  471"
"1","  472"
"1","  474"
"1","  932"
"1","  933"
"1","  935"
"1","  936"
"1","  937"
"1","  938"
"1","  942"
"1","  943"
"1","  944"
"1","  945"
"1","  946"
"1","  947"
"1","  948"
"1","  949"
"1","  950"
"1","  951"
"1","  952"
"1","  995"
"1","  998"
"1"," 1449"
"1","
"
"1"," [25]"
"1"," 1454"
"1"," 1485"
"1"," 1490"
"1"," 1491"
"1"," 1527"
"1"," 1530"
"1"," 1569"
"1"," 1598"
"1"," 1599"
"1"," 1604"
"1"," 1605"
"1"," 1606"
"1"," 1609"
"1"," 1659"
"1"," 1660"
"1"," 1713"
"1"," 1714"
"1"," 1768"
"1"," 2163"
"1"," 2164"
"1"," 2165"
"1"," 2166"
"1"," 2168"
"1"," 2171"
"1","
"
"1"," [49]"
"1"," 2172"
"1"," 2173"
"1"," 2174"
"1"," 2175"
"1"," 2176"
"1"," 2177"
"1"," 2178"
"1"," 2179"
"1"," 2180"
"1"," 2181"
"1"," 2182"
"1"," 2183"
"1"," 2210"
"1"," 2211"
"1"," 2212"
"1"," 2213"
"1"," 2214"
"1"," 2215"
"1"," 2216"
"1"," 2217"
"1"," 2219"
"1"," 2220"
"1"," 2223"
"1"," 2225"
"1","
"
"1"," [73]"
"1"," 2226"
"1"," 2227"
"1"," 2228"
"1"," 2229"
"1"," 2257"
"1"," 2258"
"1"," 2259"
"1"," 2260"
"1"," 2261"
"1"," 2262"
"1"," 2264"
"1"," 2266"
"1"," 2267"
"1"," 2268"
"1"," 2269"
"1"," 2270"
"1"," 2272"
"1"," 2273"
"1"," 2274"
"1"," 2275"
"1"," 2277"
"1"," 2304"
"1"," 2305"
"1"," 2306"
"1","
"
"1"," [97]"
"1"," 2307"
"1"," 2308"
"1"," 2309"
"1"," 2310"
"1"," 2311"
"1"," 2312"
"1"," 2314"
"1"," 2315"
"1"," 2316"
"1"," 2317"
"1"," 2319"
"1"," 2320"
"1"," 2321"
"1"," 2322"
"1"," 2323"
"1"," 2324"
"1"," 2325"
"1"," 2326"
"1"," 2328"
"1","
"
"1","[1]"
"1"," ""VCO2"""
"1","
"
"1","  [1]"
"1","  471"
"1","  930"
"1","  931"
"1","  932"
"1","  933"
"1","  935"
"1","  936"
"1","  937"
"1","  938"
"1","  942"
"1","  943"
"1","  944"
"1","  945"
"1","  946"
"1","  947"
"1","  948"
"1","  949"
"1","  950"
"1","  951"
"1","  952"
"1","  998"
"1"," 1270"
"1"," 1444"
"1"," 1445"
"1","
"
"1"," [25]"
"1"," 1446"
"1"," 1449"
"1"," 1454"
"1"," 1478"
"1"," 1485"
"1"," 1490"
"1"," 1491"
"1"," 1527"
"1"," 1569"
"1"," 1598"
"1"," 1599"
"1"," 1605"
"1"," 1606"
"1"," 1609"
"1"," 1653"
"1"," 1659"
"1"," 1660"
"1"," 1713"
"1"," 1714"
"1"," 1768"
"1"," 2161"
"1"," 2163"
"1"," 2164"
"1"," 2165"
"1","
"
"1"," [49]"
"1"," 2166"
"1"," 2167"
"1"," 2168"
"1"," 2171"
"1"," 2172"
"1"," 2173"
"1"," 2174"
"1"," 2175"
"1"," 2176"
"1"," 2177"
"1"," 2178"
"1"," 2179"
"1"," 2180"
"1"," 2181"
"1"," 2182"
"1"," 2183"
"1"," 2185"
"1"," 2194"
"1"," 2208"
"1"," 2210"
"1"," 2211"
"1"," 2212"
"1"," 2213"
"1"," 2214"
"1","
"
"1"," [73]"
"1"," 2215"
"1"," 2216"
"1"," 2217"
"1"," 2219"
"1"," 2220"
"1"," 2223"
"1"," 2225"
"1"," 2226"
"1"," 2227"
"1"," 2228"
"1"," 2229"
"1"," 2230"
"1"," 2231"
"1"," 2257"
"1"," 2258"
"1"," 2259"
"1"," 2260"
"1"," 2261"
"1"," 2262"
"1"," 2263"
"1"," 2264"
"1"," 2266"
"1"," 2267"
"1"," 2268"
"1","
"
"1"," [97]"
"1"," 2269"
"1"," 2270"
"1"," 2272"
"1"," 2273"
"1"," 2274"
"1"," 2275"
"1"," 2277"
"1"," 2285"
"1"," 2304"
"1"," 2305"
"1"," 2306"
"1"," 2307"
"1"," 2308"
"1"," 2309"
"1"," 2310"
"1"," 2311"
"1"," 2312"
"1"," 2314"
"1"," 2315"
"1"," 2316"
"1"," 2317"
"1"," 2319"
"1"," 2320"
"1"," 2321"
"1","
"
"1","[121]"
"1"," 2322"
"1"," 2323"
"1"," 2324"
"1"," 2325"
"1"," 2326"
"1"," 2328"
"1"," 2331"
"1","
"
"1","[1]"
"1"," ""H2Omg"""
"1","
"
"1"," [1]"
"1","  314"
"1","  460"
"1","  514"
"1","  515"
"1","  516"
"1","  915"
"1","  916"
"1","  922"
"1","  923"
"1","  924"
"1","  932"
"1","  982"
"1","  983"
"1","  984"
"1","  985"
"1","  986"
"1"," 1030"
"1"," 1031"
"1"," 1032"
"1"," 1033"
"1"," 1257"
"1"," 1258"
"1"," 1541"
"1"," 1543"
"1","
"
"1","[25]"
"1"," 1583"
"1"," 1671"
"1"," 1672"
"1"," 1673"
"1"," 1674"
"1"," 1676"
"1"," 1726"
"1"," 1727"
"1"," 1728"
"1"," 1729"
"1"," 1730"
"1"," 1731"
"1"," 1732"
"1"," 1733"
"1"," 1753"
"1"," 1754"
"1"," 2157"
"1"," 2158"
"1"," 2187"
"1"," 2188"
"1"," 2189"
"1"," 2194"
"1"," 2195"
"1"," 2206"
"1","
"
"1","[49]"
"1"," 2207"
"1"," 2208"
"1"," 2235"
"1"," 2236"
"1"," 2237"
"1"," 2238"
"1"," 2239"
"1"," 2251"
"1"," 2252"
"1"," 2253"
"1"," 2283"
"1"," 2284"
"1"," 2285"
"1"," 2286"
"1"," 2287"
"1"," 2288"
"1"," 2289"
"1"," 2290"
"1"," 2291"
"1"," 2292"
"1"," 2298"
"1"," 2299"
"1"," 2329"
"1"," 2330"
"1","
"
"1","[73]"
"1"," 2331"
"1"," 2332"
"1"," 2333"
"1"," 2334"
"1"," 2335"
"1","
"
"1","[1]"
"1"," ""Activity"""
"1","
"
"1"," [1]"
"1","  167"
"1","  313"
"1","  438"
"1","  604"
"1","  749"
"1","  915"
"1"," 1261"
"1"," 1436"
"1"," 1586"
"1"," 1786"
"1"," 1961"
"1"," 2161"
"1","
"
"0","masterlist <- c(OL_list_EE, OL_list_RQ, OL_list_VO2, OL_list_VCO2, OL_list_H2Omg, OL_list_Activity)"
"0","masterlist_noDup <- unique(masterlist)"
"0",""
"0","lowfat_dehydration_noOL_rep1 <- cages[-c(masterlist_noDup),]"
"0","#write.csv(all_noOL_M, ""all_noOL_M.csv"", row.names = FALSE)"
"0",""
